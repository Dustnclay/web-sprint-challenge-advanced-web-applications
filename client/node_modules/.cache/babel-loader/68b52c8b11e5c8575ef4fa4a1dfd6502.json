{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dustin\\\\Documents\\\\Lambda-projects\\\\Unit-3\\\\SprintWebApp\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport axiosAuth from \"../utils/axiosAuth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors,\n  setTrigger\n}) => {\n  // console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    axiosAuth().put(`/colors/${colorToEdit.id}`, colorToEdit).then(res => console.log('saveEdit res:', res.data), setTrigger(true)).catch(err => console.log('saveEdit err:', err)); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n  };\n\n  const deleteColor = color => {\n    axiosAuth().delete(`/colors/${colorToEdit.id}`).then(res => console.log('celeteColor res', res), setTrigger(true)).catch(err => {\n      console.log('deleteColor err:', err);\n    }); // make a delete request to delete this color\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Users/Dustin/Documents/Lambda-projects/Unit-3/SprintWebApp/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosAuth","initialColor","color","code","hex","ColorList","colors","updateColors","setTrigger","editing","setEditing","colorToEdit","setColorToEdit","editColor","saveEdit","e","preventDefault","put","id","then","res","console","log","data","catch","err","deleteColor","delete","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axiosAuth from \"../utils/axiosAuth\";\r\n\r\nconst initialColor = {\r\n  color: \"\",\r\n  code: { hex: \"\" }\r\n};\r\n\r\nconst ColorList = ({ colors, updateColors, setTrigger }) => {\r\n  // console.log(colors);\r\n  const [editing, setEditing] = useState(false);\r\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\r\n\r\n  const editColor = color => {\r\n    setEditing(true);\r\n    setColorToEdit(color);\r\n  };\r\n\r\n  const saveEdit = e => {\r\n    e.preventDefault();\r\n    axiosAuth()\r\n      .put(`/colors/${colorToEdit.id}`, colorToEdit)\r\n      .then(res => console.log('saveEdit res:',res.data),setTrigger(true))\r\n      .catch(err => console.log('saveEdit err:',err))\r\n    // Make a put request to save your updated color\r\n    // think about where will you get the id from...\r\n    // where is is saved right now?\r\n  };\r\n\r\n  const deleteColor = color => {\r\n\r\n    axiosAuth()\r\n      .delete(`/colors/${colorToEdit.id}`)\r\n      .then(res=>console.log('celeteColor res',res), setTrigger(true))\r\n      .catch(err=>{console.log('deleteColor err:',err)})\r\n\r\n    // make a delete request to delete this color\r\n  };\r\n\r\n  return (\r\n    <div className=\"colors-wrap\">\r\n      <p>colors</p>\r\n      <ul>\r\n        {colors.map(color => (\r\n          <li key={color.color} onClick={() => editColor(color)}>\r\n            <span>\r\n              <span className=\"delete\" onClick={e => {\r\n                    e.stopPropagation();\r\n                    deleteColor(color)\r\n                  }\r\n                }>\r\n                  x\r\n              </span>{\" \"}\r\n              {color.color}\r\n            </span>\r\n            <div\r\n              className=\"color-box\"\r\n              style={{ backgroundColor: color.code.hex }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editing && (\r\n        <form onSubmit={saveEdit}>\r\n          <legend>edit color</legend>\r\n          <label>\r\n            color name:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\r\n              }\r\n              value={colorToEdit.color}\r\n            />\r\n          </label>\r\n          <label>\r\n            hex code:\r\n            <input\r\n              onChange={e =>\r\n                setColorToEdit({\r\n                  ...colorToEdit,\r\n                  code: { hex: e.target.value }\r\n                })\r\n              }\r\n              value={colorToEdit.code.hex}\r\n            />\r\n          </label>\r\n          <div className=\"button-row\">\r\n            <button type=\"submit\">save</button>\r\n            <button onClick={() => setEditing(false)}>cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div className=\"spacer\" />\r\n      {/* stretch - build another form here to add a color */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"]},"metadata":{},"sourceType":"module"}